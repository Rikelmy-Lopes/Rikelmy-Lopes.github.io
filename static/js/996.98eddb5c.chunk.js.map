{"version":3,"file":"static/js/996.98eddb5c.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","components/ContactMe.jsx","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.10.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import emailjs from '@emailjs/browser';\nimport React from 'react';\nimport { useState } from 'react';\nimport { emailjsInfo } from '../config';\nimport '../style/ContactMe.css';\n\nfunction ContactMe() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  emailjs.init(emailjsInfo.publicKey);\n\n  const isEmailValid = () => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    return regex.test(email);\n  };\n  const isNameMessageValid = () => {\n    const regex = /[a-zA-Z]/;\n    return regex.test(name) && regex.test(message) && message.length >= 10;\n  };\n\n  const statusFormError = () => {\n    const message = document.getElementById('status-form');\n    message.innerText = 'Email não enviado, tente novamente!';\n    message.style.backgroundColor = 'red';\n    message.style.visibility = 'visible';\n    setTimeout(() => {\n      message.style.visibility = 'hidden';\n    }, 3000);\n  };\n\n  const statusFormSuccess = () => {\n    const message = document.getElementById('status-form');\n    message.innerText = 'Email enviado com Sucesso!!!';\n    message.style.backgroundColor = 'green';\n    message.style.visibility = 'visible';\n    setTimeout(() => {\n      message.style.visibility = 'hidden';\n    }, 3000);\n  };\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n    let template_params = {\n      to_name: 'Rikelmy Lopes',\n      from_name: name,\n      from_email: email,\n      message: message,\n    };\n\n    emailjs.send(emailjsInfo.serviceId, emailjsInfo.templateId, template_params)\n      .then(() => {\n        statusFormSuccess();\n        setName(''); setEmail(''); setMessage('');\n      })\n      .catch((error) => {\n        console.log(error);\n        statusFormError();\n      });\n  };\n\n  return (\n    <section id=\"contact\" className=\"contact sec-pad dynamicBg\">\n      <div className=\"main-container\">\n        <h2 className=\"heading heading-sec heading-sec__mb-med\">\n          <span className=\"heading-sec__main heading-sec__main--lt\">Contato</span>\n          <span className=\"heading-sec__sub heading-sec__sub--lt\">\n          </span>\n        </h2>\n        <div className=\"contact__form-container\">\n          <form action=\"#\" className=\"contact__form\">\n            <div className=\"contact__form-field\">\n              <label className=\"contact__form-label\" htmlFor=\"name\">Nome</label>\n              <input\n                required\n                placeholder=\"Seu nome aqui\"\n                type=\"text\"\n                className=\"contact__form-input\"\n                name=\"name\"\n                id=\"name\"\n                onChange={({target}) => setName(target.value)}\n                value={ name }\n              />\n            </div>\n            <div className=\"contact__form-field\">\n              <label className=\"contact__form-label\" htmlFor=\"email\">Email</label>\n              <input\n                required\n                placeholder=\"nome@exemplo.com\"\n                type=\"email\"\n                className=\"contact__form-input\"\n                name=\"email\"\n                id=\"email\"\n                onChange={({target}) => setEmail(target.value)}\n                value={ email }\n              />\n            </div>\n            <div className=\"contact__form-field\">\n              <label className=\"contact__form-label\" htmlFor=\"message\">Mensagem</label>\n              <textarea\n                required\n                cols=\"30\"\n                rows=\"10\"\n                className=\"contact__form-input\"\n                placeholder=\"Escreva sua mensagem aqui\"\n                name=\"message\"\n                id=\"message\"\n                onChange={({target}) => setMessage(target.value)}\n                value={ message }\n              ></textarea>\n            </div>\n            <div className='contact-card-button'>\n              <span id='status-form'></span>\n              <button\n                disabled={ !(isEmailValid() && isNameMessageValid()) }\n                type=\"submit\" \n                className=\"btn-mine btn--theme contact__btn\"\n                onClick={ sendEmail }\n              >\n              Enviar\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default ContactMe;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","EmailJSResponseStatus","httpResponse","instance","TypeError","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","keys","forEach","setRequestHeader","send","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","useState","name","setName","email","setEmail","message","setMessage","emailjs","emailjsInfo","id","className","action","htmlFor","required","placeholder","type","onChange","value","cols","rows","disabled","test","regex","isNameMessageValid","onClick","e","preventDefault","to_name","from_name","from_email","then","document","getElementById","innerText","style","backgroundColor","visibility","setTimeout","statusFormSuccess","catch","error","console","log","statusFormError","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","_unsupportedIterableToArray","o","minLen","n","toString","slice","constructor","from"],"sourceRoot":""}